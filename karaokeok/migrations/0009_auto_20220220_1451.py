# Generated by Django 4.0.2 on 2022-02-20 14:51
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations

from data.library import library
from karaokeok.models import Song, Artist
from typing import List


def upsert_artist(apps, schema_editor, name):
    """
    :type apps: 
    :type schema_editor: 
    :type name: str
    :rtype: Artist
    """
    try:
        artist = Artist.objects.get(name=name)
    except ObjectDoesNotExist:
        artist = Artist(name=name)

    if artist:
        artist.name = name
    else:
        artist = Artist(name=name)

    artist.save()

    return artist


def insert_song(apps, schema_editor, title, artist, featuring_artists, youtube_url, thumbnail_url):
    """
    :type apps: 
    :type schema_editor: 
    :type title: str
    :type artist: Artist
    :type featuring_artists: List[Artist]
    :type youtube_url: str
    :type thumbnail_url: str
    :rtype: Song
    """
    song = Song(
        title=title,
        artist=artist,
        youtube_url=youtube_url,
        thumbnail_url=thumbnail_url,
    )
    song.save()

    song.featuring_artist.set(featuring_artists)

    return song


def insert_library(apps, schema_editor):
    Song.objects.all().delete()
    Artist.objects.all().delete()

    for song in library:
        artist = upsert_artist(apps, schema_editor, name=song["artist"])

        featuring_artists = []
        for featuring_artist in song.get("featuring_artist", None):
            featuring_artists.append(upsert_artist(apps, schema_editor, name=featuring_artist))

        insert_song(
            apps,
            schema_editor,
            title=song["title"],
            artist=artist,
            featuring_artists=featuring_artists,
            youtube_url=song["youtube_url"],
            thumbnail_url=song.get("thumbnail_url", ''),
        )


class Migration(migrations.Migration):

    dependencies = [
        ('karaokeok', '0008_feedback'),
    ]

    operations = [
        migrations.RunPython(insert_library),
    ]
